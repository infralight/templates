AWSTemplateFormatVersion: 2010-09-09
Description: Firefly AWS Integration
Mappings:
  FireflyEnvironment:
    env:
      organizationID: "094724549126"
      SnsNameForConfirmCustomerDeployment: "handle-customer-actions"
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Parameters:
          - ExternalID
    ParameterLabels:
      ExternalID:
        default: ExternalID
Parameters:
  ExternalID:
    Description: >-
      The cross-account access role created by the stack will use this value for
      its ExternalID. Do not change this value!
    Type: String
    MinLength: '2'
    MaxLength: '1224'
    AllowedPattern: '[\w+=,.@:\/-]*'
    ConstraintDescription: 'Invalid ExternalID value.  Must match pattern [\w+=,.@:\/-]*'
Conditions: {}
Resources:
  FireflyReadonlyBlacklist:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Action:
              - 'access-analyzer:GetAnalyzer'
              - 'access-analyzer:GetArchiveRule'
              - 'access-analyzer:ListAnalyzers'
              - 'access-analyzer:ListArchiveRules'
              - 'access-analyzer:ListTagsForResource'
              - 'amplify:GetJob'
              - 'amplify:ListJobs'
              - 'applicationinsights:DescribeComponentConfigurationRecommendation'
              - 'applicationinsights:DescribeObservation'
              - 'applicationinsights:DescribeProblem'
              - 'applicationinsights:DescribeProblemObservations'
              - 'applicationinsights:ListConfigurationHistory'
              - 'applicationinsights:ListProblems'
              - 'appstream:DescribeSessions'
              - 'aps:ListAlerts'
              - 'athena:Batch*'
              - 'athena:GetQueryExecution'
              - 'athena:GetQueryResults'
              - 'athena:GetQueryResultsStream'
              - 'athena:ListQueryExecutions'
              - 'auditmanager:*'
              - 'aws-portal:*'
              - 'batch:DescribeJobs'
              - 'batch:ListJobs'
              - 'braket:*'
              - 'cassandra:*'
              - 'chime:Describe*'
              - 'chime:Get*'
              - 'chime:Search*'
              - 'chime:List*'
              - 'chime:Validate*'
              - 'cloudformation:Detect*'
              - 'cloudformation:Estimate*'
              - 'cloudtrail:LookupEvents'
              - 'cloudwatch:DescribeAlarmsForMetric'
              - 'cloudwatch:DescribeAlarmHistory'
              - 'cloudwatch:GetDashboard'
              - 'cloudwatch:GetInsightRuleReport'
              - 'cloudwatch:GetMetricData'
              - 'cloudwatch:GetMetricStatistics'
              - 'cloudwatch:GetMetricStream'
              - 'cloudwatch:GetMetricWidgetImage'
              - 'cloudwatch:ListDashboards'
              - 'cloudwatch:ListMetrics'
              - 'codebuild:BatchGet*'
              - 'codecommit:Get*'
              - 'codedeploy:BatchGet*'
              - 'codestar:Verify*'
              - 'cognito-sync:QueryRecords'
              - 'compute-optimizer:*'
              - 'config:Deliver*'
              - 'datapipeline:EvaluateExpression'
              - 'datapipeline:QueryObjects'
              - 'datapipeline:Validate*'
              - 'dax:BatchGetItem'
              - 'dax:GetItem'
              - 'dax:Query'
              - 'dax:Scan'
              - 'detective:SearchGraph'
              - 'devops-guru:SearchInsights'
              - 'devops-guru:StartCostEstimation'
              - 'dms:Test*'
              - 'ds:Check*'
              - 'ds:Verify*'
              - 'ds:DescribeCertificate'
              - 'ds:ListCertificates'
              - 'elastictranscoder:ListJobsByPipeline'
              - 'elastictranscoder:ListJobsByStatus'
              - 'emr-containers:DescribeJobRun'
              - 'emr-containers:ListJobRuns'
              - 'es:DescribeInboundConnections'
              - 'es:DescribeInboundCrossClusterSearchConnections'
              - 'es:DescribeOutboundConnections'
              - 'es:DescribeOutboundCrossClusterSearchConnections'
              - 'es:GetUpgradeHistory'
              - 'es:GetUpgradeStatus'
              - 'glacier:DescribeJob'
              - 'glacier:GetJobOutput'
              - 'glacier:ListJobs'
              - 'glue:GetJobRun'
              - 'glue:GetJobRuns'
              - 'guardduty:GetFindings'
              - 'guardduty:GetFindingsStatistics'
              - 'guardduty:GetUsageStatistics'
              - 'iam:GetAccessKeyLastUsed'
              - 'iam:GetAccountSummary'
              - 'iam:GetCredentialReport'
              - 'iam:GetServiceLastAccessedDetails'
              - 'iam:GetServiceLastAccessedDetailsWithEntities'
              - 'iam:GetServiceLinkedRoleDeletionStatus'
              - 'iam:ListAttachedGroupPolicies'
              - 'iam:ListAttachedRolePolicies'
              - 'iam:ListAttachedUserPolicies'
              - 'iam:ListMFADeviceTags'
              - 'iam:ListMFADevices'
              - 'iam:ListPoliciesGrantingServiceAccess'
              - 'inspector2:GetFindingsReportStatus'
              - 'inspector2:ListCoverage'
              - 'inspector2:ListCoverageStatistics'
              - 'inspector2:ListFindingAggregations'
              - 'inspector2:ListFindings'
              - 'inspector2:ListUsageTotals'
              - 'inspector:DescribeAssessmentRuns'
              - 'inspector:DescribeFindings'
              - 'inspector:GetAssessmentReport'
              - 'inspector:GetExclusionsPreview'
              - 'inspector:GetTelemetryMetadata'
              - 'inspector:ListAssessmentRunAgents'
              - 'inspector:ListAssessmentRuns'
              - 'inspector:ListFindings'
              - 'kinesis:DescribeStreamSummary'
              - 'kinesis:GetRecords'
              - 'kinesis:GetShardIterator'
              - 'kinesisanalytics:DescribeApplicationSnapshot'
              - 'kinesisanalytics:ListApplicationSnapshots'
              - 'kinesisvideo:GetClip'
              - 'kinesisvideo:GetDASHStreamingSessionURL'
              - 'kinesisvideo:GetHLSStreamingSessionURL'
              - 'kinesisvideo:GetMedia'
              - 'kinesisvideo:GetMediaForFragmentList'
              - 'kinesisvideo:ListFragments'
              - 'kms:GetKeyRotationStatus'
              - 'kms:GetParametersForImport'
              - 'kms:ListGrants'
              - 'kms:ListRetirableGrants'
              - 'lakeformation:DescribeTransaction'
              - 'lakeformation:GetQueryState'
              - 'lakeformation:GetQueryStatistics'
              - 'lakeformation:GetTableObjects'
              - 'lakeformation:GetWorkUnitResults'
              - 'lakeformation:GetWorkUnits'
              - 'lakeformation:ListTransactions'
              - 'lex:DescribeBotRecommendation'
              - 'lex:DescribeExport'
              - 'lex:DescribeImport'
              - 'lex:GetExport'
              - 'lex:GetImport'
              - 'lex:GetMigration'
              - 'lex:GetMigrations'
              - 'lex:GetSession'
              - 'license-manager:GetAccessToken'
              - 'license-manager:GetGrant'
              - 'license-manager:GetLicenseConversionTask'
              - 'license-manager:GetLicenseUsage'
              - 'license-manager:ListDistributedGrants'
              - 'license-manager:ListLicenseConversionTasks'
              - 'license-manager:ListReceivedGrants'
              - 'license-manager:ListReceivedLicenses'
              - 'license-manager:ListTokens'
              - 'license-manager:ListUsageForLicenseConfiguration'
              - 'lightsail:GetBucketMetricData'
              - 'lightsail:GetCloudFormationStackRecords'
              - 'lightsail:GetContainerAPIMetadata'
              - 'lightsail:GetContainerImages'
              - 'lightsail:GetContainerLog'
              - 'lightsail:GetContainerServiceDeployments'
              - 'lightsail:GetContainerServiceMetricData'
              - 'lightsail:GetContainerServicePowers'
              - 'lightsail:GetContainerServices'
              - 'lightsail:GetDiskSnapshot'
              - 'lightsail:GetDiskSnapshots'
              - 'lightsail:GetDistributionLatestCacheReset'
              - 'lightsail:GetDistributionMetricData'
              - 'lightsail:GetExportSnapshotRecords'
              - 'lightsail:GetInstanceAccessDetails'
              - 'lightsail:GetInstanceMetricData'
              - 'lightsail:GetInstanceSnapshot'
              - 'lightsail:GetInstanceSnapshots'
              - 'lightsail:GetInstanceState'
              - 'lightsail:GetLoadBalancerMetricData'
              - 'lightsail:GetOperation'
              - 'lightsail:GetOperations'
              - 'lightsail:GetOperationsForResource'
              - 'lightsail:GetRelationalDatabaseEvents'
              - 'lightsail:GetRelationalDatabaseLogEvents'
              - 'lightsail:GetRelationalDatabaseMetricData'
              - 'lightsail:GetRelationalDatabaseSnapshot'
              - 'lightsail:GetRelationalDatabaseSnapshots'
              - 'logs:DescribeExportTasks'
              - 'logs:DescribeQueries'
              - 'logs:DescribeQueryDefinitions'
              - 'logs:GetLogEvents'
              - 'logs:GetLogGroupFields'
              - 'logs:GetLogRecord'
              - 'logs:GetQueryResults'
              - 'macie2:GetBucketStatistics'
              - 'macie2:GetFindingStatistics'
              - 'macie2:GetFindings'
              - 'macie2:GetMacieSession'
              - 'macie2:GetUsageStatistics'
              - 'macie2:GetUsageTotals'
              - 'macie2:ListFindings'
              - 'managedblockchain:GetProposal'
              - 'managedblockchain:ListProposalVotes'
              - 'managedblockchain:ListProposals'
              - 'memorydb:DescribeParameters'
              - 'polly:SynthesizeSpeech'
              - 'rekognition:CompareFaces'
              - 'wafv2:CheckCapacity'
              - 'workdocs:CheckAlias'
              - 'workmail:Search*'
            Resource:
              - '*'
  FireflyReadonlySpecialWhitelist:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'kms:Decrypt'
            Resource:
              - !Join [':', ['arn:aws:kms:*', !Ref 'AWS::AccountId', 'key/*']]
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
              - 'arn:aws:s3:::*/*.tfstate'
        Statement:
          - Effect: Allow
            Action:
              - 'chime:GetVoiceConnector*'
              - 'chime:ListTagsForResource'
              - 'chime:ListVoiceConnector*'
              - 'codecommit:GetApprovalRuleTemplate'
              - 'codecommit:GetRepository'
              - 'codecommit:GetRepositoryTriggers'
            Resource:
              - '*'
  FireflyCrossAccountAccessRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'firefly-caa-role'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !FindInMap
                    - FireflyEnvironment
                    - env
                    - organizationID
                  - ':root'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalID
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/SecurityAudit'
        - 'arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/ReadOnlyAccess'
        - !Ref FireflyReadonlyBlacklist
        - !Ref FireflyReadonlySpecialWhitelist
Outputs:
  RoleARN:
    Description: >-
      Cross-account access role ARN to share with Firefly
      integration
    Value: !GetAtt
      - FireflyCrossAccountAccessRole
      - Arn
  ExternalID:
    Description: ExternalID to share with Firefly
    Value: !Ref ExternalID
  TemplateVersion:
    Description: gofirefly.io template version
    Value: 1.0.0
